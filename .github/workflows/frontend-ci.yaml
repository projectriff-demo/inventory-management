name: Frontend CI

on:
  push:
    branches:
      - '**'
  pull_request: {}

jobs:
  unit:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Build with NPM
        run: |
          npm --prefix gui ci
          npm --prefix gui test
  e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    needs: unit
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Run e2e tests
        run: |
          mvn -B -V spring-boot:run &
          npm --prefix gui ci
          npm --prefix gui run -- webdriver-manager update --versions.chrome="$(google-chrome --version | cut -d ' ' -f 3)"
          while [ "$(curl --request GET http://localhost:8080/actuator/health 2> /dev/null | jq --raw-output '.status')" != "UP" ]; do
          	echo '(┛ಠ_ಠ)┛彡┻━┻ backend not up yet'
          	sleep 2
          done
          echo '┬─┬ノ(º_ºノ) backend ready: starting e2e tests'
          npm --prefix gui run -- ng e2e --webdriver-update=false
  publish:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: e2e
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Publish Docker image
        run: |
          cd gui
          echo ${DOCKERHUB_PASSWORD} | docker login --username ${DOCKERHUB_USERNAME} --password-stdin
          docker build -t ${DOCKERHUB_ORGANIZATION}/inventory-gui .
          docker push ${DOCKERHUB_ORGANIZATION}/inventory-gui
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_ORGANIZATION: ${{ secrets.DOCKERHUB_ORGANIZATION }}
